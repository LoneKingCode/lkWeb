@using lkWeb.Admin.Areas.Admin.Models
@using lkWeb.Service.Enum;
@using System.Text;
@using System.Text.Encodings.Web;
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout_Content.cshtml";
    ViewBag.Title = "添加数据";
}
@model ViewListModel

@section Styles{
    <style type="text/css">
        .table > tbody > tr > td {
            border: none;
            vertical-align: middle;
        }
    </style>

    <style type="text/css">
     @Html.Raw(Model.Table.CustomCssStyle)
    </style>

}

@section Scripts{
    <script src="~/js/admin/viewlist.js" asp-append-version="true"></script>

    <script type="text/javascript">
        @Html.Raw(Model.Table.EditPageJavaScript)

        rules = {
        @{
            var data = "";
            var tpl = "{0}:{{ required:{1},maxlength:{2},{3} }},";
            foreach (var column in Model.TableColumn)
            {
                data += string.Format(tpl,column.Name, (
                    column.Required == 1 ? "true" : "false"),
                    column.MaxLength, (
                    string.IsNullOrEmpty(column.ValidationRule) ? "" : column.ValidationRule));
            }
            @Html.Raw(data)
        }
        };
        $(function () {
            //加载富文本
            @{
                var richTextColumns= Model.TableColumn.Where(item => item.DataType == ColumnType.RichText).ToList();
                for (int i = 0; i < richTextColumns.Count; i++)
                {
                        @Html.Raw($"var editor{i} = UE.getEditor('{richTextColumns[i].Name}');")
                        @Html.Raw($"$('#{richTextColumns[i].Name}').css('width', (window.innerWidth - 103 * {Model.Table.ColumnPerRow+1}) + 'px').css('height', Math.round(window.innerHeight * 0.3) + 'px');")
                    }
            }
            })



    </script>
}
<form class="form-horizontal" action="@Url.Action("Add",new { id = @Model.Table.Id })" method="post" id="lkForm">
    @Html.AntiForgeryToken()
    <table class="table table-content">
        <tbody>
            @{
                string fileTpl = "<input type=\"hidden\" name=\"{0}\" class=\"file-ids\" value=\"\" />" +
               "<input type=\"file\" id=\"file{0}\" onchange='uploadFile(this,\"{1}\",\"{2}\")' style=\"display:none;\"  data-minimum=\"{3}\" data-maximum=\"{4}\" data-type=\"{5}\">" +
                 "<div class=\"file-list {5}\" id=\"{6}\"></div>" +
                 "<div class=\"file-upload\" onclick=\"$('#file{0}').click()\"><i class=\"fa fa-upload\"></i></div>";
                string textareaTpl = "<textarea class=\"form-control\" name=\"{0}\" rows=\"3\" ></textarea>";
                string inputTpl = "<input type=\"text\" class=\"form-control\" name=\"{0}\" {1}/>";
                string editorTpl = "<script id=\"{0}\" name=\"{0}\" type=\"text/plain\" style=\"height:250px;\"></script>";
                var dateTpl = "<div class='input-group'>" +
"<input class=\"form-control datetimepicker\" readonly type=\"text\" name=\"{0}\" value=\"\" data-date-format=\"{1}\">" +
"<span class=\"input-group-addon\"><i class=\"fa fa-calendar\"></i></span></div>";
                StringBuilder sb = new StringBuilder();
                var numPerRow = Model.Table.ColumnPerRow < 1 ? 1 : Model.Table.ColumnPerRow;
                var count = 0;
                sb.Append("<tr>");
                foreach (var column in Model.TableColumn)
                {
                    count++;
                    var colspan = 1;
                    if (column.ColSpan > 1)
                    {
                        colspan = column.ColSpan;
                    }
                    var requireSpan = column.Required == 1 ? "<span class='require'>*</span>" : "";
                    string tempTpl = "<td class='td-left'>" + requireSpan + "<span class='name'>" + column.Description + "</span></td><td colspan='" + colspan + "'>{0}</td>";
                    if (column.DataType == ColumnType.Out || column.DataType == ColumnType.Enum)
                    {
                        var htmlAttr = new Dictionary<string, object> { { "class", "form-control select" }, { "id", column.Name } };
                        var content = Html.DropDownList(column.Name, (SelectList)ViewData[column.Name], htmlAttr);
                        var writer = new System.IO.StringWriter();
                        content.WriteTo(writer, HtmlEncoder.Default);
                        var sltHtml = writer.ToString();
                        sb.Append(string.Format(tempTpl, sltHtml));
                    }

                    else if (column.DataType == ColumnType.MultiSelect || column.DataType == ColumnType.MultiSelect_Out)
                    {
                        var htmlAttr = new Dictionary<string, object> { { "class", "form-control select" }, { "multiple", "multiple" }, { "id", column.Name } };
                        var content = Html.DropDownList(column.Name, (SelectList)ViewData[column.Name], htmlAttr);
                        var writer = new System.IO.StringWriter();
                        content.WriteTo(writer, HtmlEncoder.Default);
                        var sltHtml = writer.ToString();
                        sb.Append(string.Format(tempTpl, sltHtml));
                    }
                    else if (column.DataType == ColumnType.Datetime)
                    {
                        string contentHtml = string.Format(dateTpl, column.Name, column.DateFormat);
                        sb.Append(string.Format(tempTpl, contentHtml));

                    }
                    else if (column.DataType == ColumnType.File || column.DataType == ColumnType.Image)
                    {
                        var contentHtml = string.Format(fileTpl, column.Name, Url.Action("Upload"), column.Id, column.UploadMinimum, column.UploadMaximum,
                             column.DataType == ColumnType.Image ? "images" : "",
                              column.DataType + column.Name);

                        sb.Append(string.Format(tempTpl, Html.Raw(contentHtml)));
                    }
                    else if (column.DataType == ColumnType.RichText)
                    {
                        sb.Append("<tr>");
                        var contentHtml = string.Format(editorTpl, column.Name);
                        sb.Append(string.Format(tempTpl, contentHtml));
                        sb.Append("</tr>");
                        count++;
                        continue;
                    }
                    else if (column.DataType == ColumnType.MultiLine_String)
                    {
                        var contentHtml = string.Format(textareaTpl, column.Name);
                        sb.Append(string.Format(tempTpl, contentHtml));
                    }
                    else
                    {
                        var contentHtml = string.Format(inputTpl, column.Name, $" placeholder='请输入{column.Description}' ");
                        sb.Append(string.Format(tempTpl, contentHtml));
                    }
                    if (count % numPerRow == 0)
                    {
                        sb.Append("</tr>");
                        sb.Append("<tr>");
                    }
                }
                sb.Append("</tr>");
                @Html.Raw(sb.ToString());
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="99">
                    <div class="form-group">
                        <div class="col-md-3 col-md-offset-5">
                            <button type="button" class="btn btn-success" id="btnConfirm">确定</button>
                            <button type="button" class="btn btn-default" onclick="lkWeb.Close()">返回</button>
                            <button type="submit" id="btnSubmit" style="display:none;">提交表单</button>
                        </div>
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>

</form>

